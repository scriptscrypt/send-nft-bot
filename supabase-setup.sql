-- Create images table
CREATE TABLE IF NOT EXISTS public.images (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  filename text NOT NULL,
  prompt text NOT NULL,
  path text NOT NULL,
  url text NOT NULL,
  created_at timestamp with time zone DEFAULT now()
);

-- Add comment to table
COMMENT ON TABLE public.images IS 'Stores metadata for images generated by the bot';

-- Create index on user_id for faster queries
CREATE INDEX IF NOT EXISTS images_user_id_idx ON public.images (user_id);

-- Set up RLS (Row Level Security)
ALTER TABLE public.images ENABLE ROW LEVEL SECURITY;

-- Create policy to allow users to read only their own images
CREATE POLICY "Users can view their own images" 
  ON public.images FOR SELECT 
  USING (auth.uid()::text = user_id);

-- Create policy to allow the service role to do anything
CREATE POLICY "Service role can do anything" 
  ON public.images FOR ALL 
  USING (auth.role() = 'service_role') 
  WITH CHECK (auth.role() = 'service_role'); 